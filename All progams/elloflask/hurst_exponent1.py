
import numpy as np
import matplotlib.pyplot as plt
from hurst import compute_Hc, random_walk
import seaborn as sns
import pandas as pd
import yfinance as yf


def get_time_series(ticker):
    """
    Function to gather time series data for a specifed company over the 3 year timespan of December 2019 to December 2022 

    return: an array of time series data 

    """


    company = yf.Ticker(ticker)

    company.info

    company_df = yf.download("TSLA",
                             start="2019-12-01",
                             end="2022-12-01",
                             progress=False)
    time_series = company_df["Adj Close"].values
    return time_series



def hurst_exponent(ticker, max_lag=20):
    """Returns the Hurst Exponent of the time series"""

    time_series = get_time_series(ticker)
    lags = range(2, max_lag)

    # variances of the lagged differences
    tau = [np.std(np.subtract(time_series[lag:], time_series[:-lag]))
           for lag in lags]

    # calculate the slope of the log plot -> the Hurst Exponent
    reg = np.polyfit(np.log(lags), np.log(tau), 1)

    return reg[0]


def interpret_hurst(ticker):
    """
    Function to interpret the Hurst exponent generated by the previous function 

    return: a string 
    """
    hurst_exp = hurst_exponent(ticker, 20)
    if hurst_exp < 0.5:
        return f"The Hurst Exponent is {hurst_exp:.4f} which signifies that the stock price is mean reverting"
    elif hurst_exp == 0.5:
        return f"The The Hurst Exponent is {hurst_exp:.4f} which signifies that the stock price follows a geomtric random walk"
    else:
        return f"The The Hurst Exponent is {hurst_exp:.4f} which signifies that the stock price is trending"


def main():
    output = interpret_hurst("Tesla")
    print(output)


if __name__ == "__main__":
    main()


